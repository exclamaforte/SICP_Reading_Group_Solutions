;2.2
(define (make-point x y)
    (cons x y))
    
(define (x-point point)
    (car point))
    
(define (y-point point)
    (cdr point))

(define (print-point p)
    (display "(")
    (display (x-point p))
    (display ", ")
    (display (y-point p))
    (display ")")
    (newline))

(define (make-seg p1 p2)
    (cons p1 p2))
    
(define (start-seg seg)
    (car seg))
    
(define (end-seg seg)
    (cdr seg))
    
(define (mid-seg seg)
    (make-point (/ (+ (x-point (start-seg seg))
                      (x-point (end-seg seg))) 2)
                (/ (+ (y-point (start-seg seg))
                      (y-point (end-seg seg))) 2)))

(define (print-seg seg)
    (print-point (start-seg seg))
    (print-point (end-seg seg)))
                      
;2.3

(define (rec seg)
    seg)
    
(define (rec-height rec)
    (abs (- (y-point (start-seg rec))
            (y-point (end-seg rec)))))

(define (rec-width rec)
    (abs (- (x-point (start-seg rec))
            (x-point (end-seg rec)))))

(define (rec-area rec)
    (* (rec-height rec) (rec-width rec)))
    
(define (rec-perm rec)
    (* 2 (+ (rec-height rec) (rec-width rec))))


    
    
    
    
    
    
    
    
